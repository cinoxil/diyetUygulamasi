<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>